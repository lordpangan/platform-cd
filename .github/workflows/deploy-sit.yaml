name: deploy-sit

on:
  workflow_dispatch:
    inputs:
      service:
        description: "Service to deploy (orders | inventory | payment)"
        required: true
        type: choice
        options: [orders, inventory, payment]
      tag:
        description: "Image tag to deploy (e.g., sha-12345678)"
        required: true
        type: string

env:
  REGISTRY: ${{ vars.REGISTRY || 'ghcr.io/lordpangan' }}
  DOMAIN:   ${{ vars.DOMAIN   || 'orderoneline.com' }}

jobs:
  deploy-sit:
    runs-on: ubuntu-proxmox
    environment: SIT
    permissions:
      contents: read
      deployments: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Write kubeconfig from base64
        run: |
          printf '%s' "${KUBECONFIG_B64}" | base64 -d > "$RUNNER_TEMP/kubeconfig"
          echo "KUBECONFIG=$RUNNER_TEMP/kubeconfig" >> $GITHUB_ENV
        env:
          KUBECONFIG_B64: ${{ secrets.KUBECONFIG }}

      - run: kubectl cluster-info

      - name: Apply SIT (by TAG) and wait
        env:
          SERVICE:  ${{ inputs.service }}
          TAG:      ${{ inputs.tag }}
          REGISTRY: ${{ env.REGISTRY }}
        run: |
          set -euo pipefail
          NAMESPACE=sit

          # Map service input to deployment and image path
          case "$SERVICE" in
            orders)    DEPLOY=orders;    IMAGE="$REGISTRY/orders-service";;
            inventory) DEPLOY=inventory; IMAGE="$REGISTRY/inventory-service";;
            payment)   DEPLOY=payment;   IMAGE="$REGISTRY/payment-service";;
            *) echo "Unknown service: $SERVICE"; exit 1;;
          esac

          echo "Deploying $SERVICE with image: $IMAGE:$TAG"

          # Apply overlay and patch image
          kubectl apply -k ops/k8s/overlays/sit
          kubectl -n $NAMESPACE set image deploy/$DEPLOY $SERVICE=$IMAGE:$TAG

          # # Restart and wait for rollout completion
          # kubectl -n $NAMESPACE rollout restart deploy/$DEPLOY
          # kubectl -n $NAMESPACE rollout status deploy/$DEPLOY --timeout=180s
